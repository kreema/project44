
package chckavailability;

import java.sql.SQLException;
import javax.swing.*;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;

public class MainPortal extends JFrame {
 
    
    private DbConnect connect;  //an instance of class DbConnect
   private Date frmDate;
    private Date toDate;
    //Deafult Constructor to initialise Main Portal page
    public MainPortal() {
        
        initComponents();
         setSize(600,300);
        jScrollPane2.setVisible(false);
        tableChckAvail.setVisible(false);
        
    }

   public Date getFrmDate(){
       return this.frmDate;
   }
   public Date getToDate(){
       return this.toDate;
   }
   public DbConnect getConnect(){
       return this.connect;
   }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        lblfrmDate = new javax.swing.JLabel();
        lbltoDate = new javax.swing.JLabel();
        jDatefrmDate = new com.toedter.calendar.JDateChooser();
        jDatetoDate = new com.toedter.calendar.JDateChooser();
        lblNights = new javax.swing.JLabel();
        jTextNights = new javax.swing.JTextField();
        lblRoomType = new javax.swing.JLabel();
        jComboRoomType = new javax.swing.JComboBox();
        jButtonChckAvailability = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableChckAvail = new javax.swing.JTable();
        jButtonBook = new javax.swing.JButton();
        jButtonLogout = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextDisplayArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("WELCOME TO OUR  HOTEL");
        setName("WELCOME"); // NOI18N

        lblfrmDate.setText("From :");

        lbltoDate.setText("To :");

        jDatefrmDate.setDateFormatString("MM/dd/yy");
        jDatefrmDate.setDoubleBuffered(false);

        jDatetoDate.setDateFormatString("MM/dd/yy");
        jDatetoDate.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jDatetoDateInputMethodTextChanged(evt);
            }
        });

        lblNights.setText(" Nights :");

        jTextNights.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextNightsActionPerformed(evt);
            }
        });

        lblRoomType.setText("Room Type :");

        jComboRoomType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SELECT", "STANDARD", "DELUX", "SUPER DELUX", "SUITE", "EXECUTIVE SUITE", "ROYAL SUITE", " " }));
        jComboRoomType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboRoomTypeActionPerformed(evt);
            }
        });

        jButtonChckAvailability.setText("Check Availability");
        jButtonChckAvailability.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChckAvailabilityActionPerformed(evt);
            }
        });

        tableChckAvail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tableChckAvail);

        jButtonBook.setText("BOOK");
        jButtonBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBookActionPerformed(evt);
            }
        });

        jButtonLogout.setText("LOGOUT");
        jButtonLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLogoutActionPerformed(evt);
            }
        });

        jTextDisplayArea.setColumns(20);
        jTextDisplayArea.setRows(5);
        jScrollPane1.setViewportView(jTextDisplayArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblfrmDate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jDatefrmDate, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(lbltoDate))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblRoomType)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboRoomType, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDatetoDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonChckAvailability))
                        .addGap(37, 37, 37)
                        .addComponent(lblNights)
                        .addGap(18, 18, 18)
                        .addComponent(jTextNights, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonBook)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(81, 81, 81)
                                .addComponent(jButtonLogout)))))
                .addContainerGap(80, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblfrmDate, lbltoDate});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jDatefrmDate, jDatetoDate});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jDatefrmDate, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblNights)
                                .addComponent(jTextNights, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblfrmDate)
                                .addComponent(lbltoDate)
                                .addComponent(jDatetoDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRoomType)
                    .addComponent(jComboRoomType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonChckAvailability))
                .addGap(54, 54, 54)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonBook)
                            .addComponent(jButtonLogout)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblfrmDate, lbltoDate});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jDatefrmDate, jDatetoDate});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jComboRoomType, lblRoomType});

        pack();
    }// </editor-fold>                        

    private void jTextNightsActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void jComboRoomTypeActionPerformed(java.awt.event.ActionEvent evt) {                                               
        // TODO add your handling code here:
    }                                              
   
    /**
     * This method checks the database and displays the result in a JTable.
     * @param evt 
     */
    private void jButtonChckAvailabilityActionPerformed(java.awt.event.ActionEvent evt) {                                                        
         // TODO add your handling code here:
        java.text.SimpleDateFormat dateFormat = new java.text.SimpleDateFormat("MM/dd/yyyy");
         frmDate = new Date(dateFormat.format(jDatefrmDate.getDate()));
         toDate = new Date(dateFormat.format(jDatetoDate.getDate()));
        String roomType = (String)jComboRoomType.getSelectedItem();
        int days = calculateDays(frmDate,toDate);
        jTextNights.setText((Integer.toString(days)));
        checkAvailability(frmDate,toDate,roomType);
        displayResult();
        
    }                                                       
   
    
    private void checkAvailability(Date frmDate,Date toDate, String roomType){
        
    
        try {
      String query = "SELECT bookroom.booking_id,bookroom.fromDate,bookroom.toDate,room.room_type,room.unit_no,room.rates\n" +
                     "FROM bookroom\n" +"INNER JOIN room\n" +"ON bookroom.room_id = room.room_id\n" +
                      "Where room.room_type = \""+roomType+"\";";
      connect = new DbConnect(query);
      
      Date test = (Date)connect.getRs().getObject("fromDate");
      if(test.toString().equals(frmDate.toString()))
      jTextDisplayArea.setText(test.toString()+" "+"true");
      else
          jTextDisplayArea.setText(test.toString()+" "+"false");
      
        } catch (SQLException ex) {
            Logger.getLogger(MainPortal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    /**
    * This method displays the room details from the database in a JTable 
    */
    private void displayResult(){
        
        
        try {
           String query = "select * from room\nwhere room_type =\""+(String)jComboRoomType.getSelectedItem()+"\"and status = \"AVAILABLE\";";
            
            
            connect = new DbConnect(query);

             //display the table
             setSize(600,500);
             jScrollPane2.setVisible(true);
             tableChckAvail.setVisible(true);
            tableChckAvail.setModel(connect);
            
        } catch (SQLException ex) {
            Logger.getLogger(MainPortal.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    private void jDatetoDateInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {                                                   
       
    }                                                  
/**
 * This method saves the selected rooms in a bag and then stores the room info to the database.
 * This method then passes the control to customer info page.
 * @param evt 
 */
    private void jButtonBookActionPerformed(java.awt.event.ActionEvent evt) {                                            
         // TODO add your handling code here:
        int[] rows = new int[50];
         int columns ;
        String[][] selectedData = new String[50][10];
        BagInterface<Object> refData = new BookRoom<Object>();
       if(tableChckAvail.getSelectedRow()>-1){

           rows =  tableChckAvail.getSelectedRows();
           columns = tableChckAvail.getColumnCount();
           for(int i=0;i<rows.length;i++){
               for(int j=0;j<columns;j++){
                   selectedData[i][j] = tableChckAvail.getValueAt(rows[i],j).toString();
               }
              refData.add(selectedData);   
           }
          // String numOfItemsSelected = Integer.toString(refData.getCurrentSize()); 
           //jTextDisplayArea.setText(numOfItemsSelected);
       }
       else
           JOptionPane.showMessageDialog( null, "Please select a room." );
           
    }                                           

    private void jButtonLogoutActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
        setVisible(false);
        JOptionPane.showMessageDialog(null, "You have successfully logged out.");
        this.dispose();
    }                                             

    
   /**
    * This method calculates the number of nights for which the room is booked.
    * @param frmDate
    * @param toDate
    * @return number of days
    */
   
    private int calculateDays(Date frmDate,Date toDate){
        
       long diff = toDate.getTime()-frmDate.getTime();
       int days = (int) (diff/(1000*60*60*24));
        return days;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainPortal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainPortal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainPortal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainPortal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainPortal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButtonBook;
    private javax.swing.JButton jButtonChckAvailability;
    private javax.swing.JButton jButtonLogout;
    private javax.swing.JComboBox jComboRoomType;
    private com.toedter.calendar.JDateChooser jDatefrmDate;
    private com.toedter.calendar.JDateChooser jDatetoDate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextDisplayArea;
    private javax.swing.JTextField jTextNights;
    private javax.swing.JLabel lblNights;
    private javax.swing.JLabel lblRoomType;
    private javax.swing.JLabel lblfrmDate;
    private javax.swing.JLabel lbltoDate;
    private javax.swing.JTable tableChckAvail;
    // End of variables declaration                   
}
